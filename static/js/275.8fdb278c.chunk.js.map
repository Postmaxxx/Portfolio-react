{"version":3,"file":"static/js/275.8fdb278c.chunk.js","mappings":"kxBAAO,IAAMA,EAAW,SAACC,GAAK,MAAM,CAChCC,KAAM,YACNC,QAASF,EACZ,EAEYG,EAAa,WAAH,MAAU,CAC7BF,KAAM,eACT,EAEYG,EAAc,WAAH,MAAU,CAC9BH,KAAM,gBACT,EAGYI,EAAiB,SAACC,GAAI,MAAM,CACrCL,KAAM,mBACNC,QAASI,EACZ,EAEYC,EAAkB,SAACD,GAAI,MAAM,CACtCL,KAAM,oBACNC,QAASI,EACZ,EAEYE,EAAoB,SAACF,GAAI,MAAM,CACxCL,KAAM,sBACNC,QAASI,EACZ,EAEYG,EAAoB,SAACH,GAAI,MAAM,CACxCL,KAAM,sBACNC,QAASI,EACZ,EAGYI,EAAW,SAACC,GAAM,MAAM,CACjCV,KAAM,YACNC,QAASS,EACZ,EAGYC,EAAgB,SAACC,GAAG,MAAM,CACnCZ,KAAM,kBACNC,QAASW,EACZ,EAEYC,EAAgB,SAACR,GAAI,MAAM,CACpCL,KAAM,kBACNC,QAASI,EACZ,EAEYS,EAAe,SAACC,GAAI,MAAM,CACnCf,KAAM,iBACNC,QAASc,EACZ,EAEYC,EAAqB,SAACC,GAAO,MAAM,CAC5CjB,KAAM,eACNC,QAASgB,EACZ,EAEYC,EAAoB,SAACb,GAAI,MAAM,CACxCL,KAAM,sBACNC,QAASI,EACZ,EAEYc,EAAkB,SAACd,GAAI,MAAM,CACtCL,KAAM,oBACNC,QAASI,EACZ,EAEYe,EAAqB,SAACf,GAAI,MAAM,CACzCL,KAAM,uBACNC,QAASI,EACZ,EAGYgB,EAAoB,SAACC,GAAO,MAAM,CAC3CtB,KAAM,sBACNC,QAASqB,EACZ,EAGYC,EAAuB,SAACC,GAAM,MAAM,CAC7CxB,KAAM,yBACNC,QAASuB,EACZ,EAGYC,EAAe,SAACC,GAAQ,MAAM,CACvC1B,KAAM,iBACNC,QAASyB,EACZ,C,uJCxBD,GAAeC,EAAAA,EAAAA,KANS,SAACC,GAAK,MAAM,CAACA,MAAOA,EAAM,IAEvB,SAACC,GAAQ,MAAM,CACtCC,UAAUC,EAAAA,EAAAA,IAAmBC,EAASH,GACzC,GAED,EAxDmB,SAACI,GAEhB,IAAMC,EAAa,WACfD,EAAMH,SAASrB,UAAS,EAC5B,EAEM0B,EAAa,SAACC,GACS,QAArBA,EAAEC,OAAOC,SACTJ,GAER,EAEMK,EAAUC,SAASC,cAAc,sBAoBvC,OAnBIF,IACAX,EAAAA,EAAAA,WAAiBc,MAAQH,EAAOI,UAAUC,IAAI,QAAUL,EAAOI,UAAUE,OAAO,UAIpFC,EAAAA,EAAAA,YAAU,WACNN,SAASC,cAAc,sBAAsBM,iBAAiB,SAAS,SAACX,GAAC,OAAKA,EAAEC,SAAWD,EAAEY,eAAiBd,GAAa,IAC7GM,SAASO,iBAAiB,WAAW,SAACX,GAAC,MAAe,WAAVA,EAAEa,KAAoBf,GAAa,IAE7F,IAAIgB,EAAUV,SAASC,cAAc,UAAUU,WAAW,GAAGA,WAAW,GACpEC,EAASZ,SAASa,cAAc,OACpCH,EAAQI,WAAYC,EAAAA,EAAAA,KACpBH,EAAOI,OAAS,WACL,OAAPN,QAAO,IAAPA,GAAAA,EAASO,gBAAgBL,EAC7B,EACAA,EAAOM,IAAM9B,EAAAA,EAAAA,WAAiB+B,WAC9BP,EAAOQ,IAAMhC,EAAAA,EAAAA,WAAiBiC,UAClC,GAAE,CAACjC,EAAAA,EAAAA,WAAiB+B,cAGhB,iBAAKG,UAAU,oBAAqBC,QAAS,SAAC3B,GAAC,OAAKD,EAAWC,EAAE,EAAC,WAC9D,gBAAK0B,UAAU,QAAO,UAClB,gBAAKC,QAAS,SAAC3B,GAAC,OAAKD,EAAWC,EAAE,EAAC,UAC/B,gBAAK2B,QAAS,SAAC3B,GAAC,OAAKD,EAAWC,EAAE,EAAC,UAC/B,gBAAKsB,IAAI,GAAGE,IAAI,YAI5B,gBAAKE,UAAU,eAAc,UACzB,gBAAKE,QAAQ,cAAcC,MAAM,6BAA6BF,QAAS7B,EAAW,UAC9E,iBAAM6B,QAAS7B,EAAYgC,EAAE,weAKjD,G","sources":["assets/redux/actions.js","components/modals/ModalImage.jsx"],"sourcesContent":["export const setTheme = (theme) => ({\r\n    type: 'SET_THEME',\r\n    payload: theme\r\n})\r\n\r\nexport const setNavOpen = () => ({\r\n    type: 'SET_NAV_OPEN',\r\n})\r\n\r\nexport const setNavClose = () => ({\r\n    type: 'SET_NAV_CLOSE',\r\n})\r\n\r\n\r\nexport const setContactName = (text) => ({\r\n    type: 'SET_CONTACT_NAME',\r\n    payload: text\r\n})\r\n\r\nexport const setContactEmail = (text) => ({\r\n    type: 'SET_CONTACT_EMAIL',\r\n    payload: text\r\n})\r\n\r\nexport const setContactSubject = (text) => ({\r\n    type: 'SET_CONTACT_SUBJECT',\r\n    payload: text\r\n})\r\n\r\nexport const setContactMessage = (text) => ({\r\n    type: 'SET_CONTACT_MESSAGE',\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setModal = (status) => ({\r\n    type: 'SET_MODAL',\r\n    payload: status\r\n})\r\n\r\n\r\nexport const setModalImage = (url) => ({\r\n    type: 'SET_MODAL_IMAGE',\r\n    payload: url\r\n})\r\n\r\nexport const setModalDescr = (text) => ({\r\n    type: 'SET_MODAL_DESCR',\r\n    payload: text\r\n})\r\n\r\nexport const setModalLink = (link) => ({\r\n    type: 'SET_MODAL_LINK',\r\n    payload: link\r\n})\r\n\r\nexport const setModalMsgVisible = (visible) => ({\r\n    type: 'SET_MODALMSG',\r\n    payload: visible\r\n})\r\n\r\nexport const setModalMsgHeader = (text) => ({\r\n    type: 'SET_MODALMSG_HEADER',\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgText = (text) => ({\r\n    type: 'SET_MODALMSG_TEXT',\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgBtnText = (text) => ({\r\n    type: 'SET_MODALMSG_BTNTEXT',\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setCurrentGallery = (gallery) => ({\r\n    type: 'SET_CURRENT_GALLERY',\r\n    payload: gallery\r\n})\r\n\r\n\r\nexport const setSelectedPortfolio = (number) => ({\r\n    type: 'SET_SELECTED_PORTFOLIO',\r\n    payload: number\r\n})\r\n\r\n\r\nexport const setImgLoaded = (isLoaded) => ({\r\n    type: 'SET_IMG_LOADED',\r\n    payload: isLoaded\r\n})\r\n/*\r\nexport const setSlideIndex = (index) => ({\r\n    type: 'SET_SLIDE_INDEX',\r\n    payload: index\r\n})\r\n*/","import * as actions from '../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { useEffect } from \"react\";\r\nimport preloader from '../preloader/preloader.js'\r\nimport store from '../../assets/redux/store'\r\nimport '@splidejs/react-splide/css';\r\nimport './modalImage.scss'\r\n\r\n\r\nlet escListener = undefined;\r\n\r\nconst ModalImage = (props) => {\r\n\r\n    const closeModal = () => {\r\n        props.setStore.setModal(false);\r\n    }\r\n\r\n    const checkClose = (e) => {\r\n        if (e.target.tagName !== 'IMG') {\r\n            closeModal()\r\n        }\r\n    }\r\n    \r\n    const _modal =  document.querySelector(\".modal__background\");\r\n    if (_modal) {\r\n        store.getState().modal ? _modal.classList.add('show') : _modal.classList.remove('show')\r\n    }\r\n     \r\n\r\n    useEffect(() => {\r\n        document.querySelector(\".modal__background\").addEventListener('click', (e) => e.target === e.currentTarget && closeModal(e));\r\n        escListener = document.addEventListener('keydown', (e) => e.key === 'Escape' && closeModal(e));\r\n        \r\n        let _target = document.querySelector('.modal').childNodes[0].childNodes[0];\r\n        let _image = document.createElement(\"img\");\r\n        _target.innerHTML = preloader();\r\n        _image.onload = () => { \r\n            _target?.replaceChildren(_image);\r\n        }\r\n        _image.src = store.getState().modalImage;\r\n        _image.alt = store.getState().modalDescr;\r\n    },[store.getState().modalImage])\r\n    \r\n    return (\r\n        <div className=\"modal__background\"  onClick={(e) => checkClose(e)}>\r\n            <div className=\"modal\">\r\n                <div onClick={(e) => checkClose(e)}>\r\n                    <div onClick={(e) => checkClose(e)}>\r\n                        <img src=\"\" alt=\"\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal__close\">\r\n                <svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\" onClick={closeModal}>\r\n                    <path onClick={closeModal} d=\"M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4  L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1  c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1  c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z\"/>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalImage);"],"names":["setTheme","theme","type","payload","setNavOpen","setNavClose","setContactName","text","setContactEmail","setContactSubject","setContactMessage","setModal","status","setModalImage","url","setModalDescr","setModalLink","link","setModalMsgVisible","visible","setModalMsgHeader","setModalMsgText","setModalMsgBtnText","setCurrentGallery","gallery","setSelectedPortfolio","number","setImgLoaded","isLoaded","connect","store","dispatch","setStore","bindActionCreators","actions","props","closeModal","checkClose","e","target","tagName","_modal","document","querySelector","modal","classList","add","remove","useEffect","addEventListener","currentTarget","key","_target","childNodes","_image","createElement","innerHTML","preloader","onload","replaceChildren","src","modalImage","alt","modalDescr","className","onClick","viewBox","xmlns","d"],"sourceRoot":""}