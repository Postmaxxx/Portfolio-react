{"version":3,"file":"static/js/402.b3144888.chunk.js","mappings":"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","sources":["assets/redux/actions.ts","components/side_panel/SidePanel.tsx"],"sourcesContent":["import { TTheme } from \"src/components/theme_switcher/theme-switcher\";\r\nimport { Action } from \"src/models\";\r\nimport { actionList } from \"src/models\";\r\n\r\n\r\nexport const setTheme = <T extends TTheme>(theme: T): Action<T> => ({\r\n\ttype: actionList.SET_THEME, \r\n\tpayload: theme,\r\n});\r\n\r\n\r\nexport const setNavOpen = <T>(): Action<T> => ({\r\n\ttype: actionList.SET_NAV_OPEN,\r\n});\r\n\r\nexport const setNavClose = <T>(): Action<T> => ({\r\n\ttype: actionList.SET_NAV_CLOSE,\r\n});\r\n\r\nexport const setContactName = <T extends string>(email: T): Action<T> => ({\r\n\ttype: actionList.SET_CONTACT_NAME,\r\n\tpayload: email\r\n});\r\n\r\n\r\nexport const setContactEmail = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_CONTACT_EMAIL,\r\n\tpayload: text\r\n});\r\n\r\nexport const setContactSubject = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_CONTACT_SUBJECT,\r\n\tpayload: text\r\n});\r\n\r\nexport const setContactMessage = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_CONTACT_MESSAGE,\r\n\tpayload: text\r\n});\r\n\r\n\r\nexport const setModal = <T extends boolean>(status: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL,\r\n\tpayload: status\r\n});\r\n\r\n\r\nexport const setModalImage = <T extends string>(url: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL_IMAGE,\r\n\tpayload: url\r\n});\r\n\r\nexport const setModalDescr = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL_DESCR,\r\n\tpayload: text\r\n});\r\n\r\nexport const setModalLink = <T extends string>(link: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL_LINK,\r\n\tpayload: link\r\n});\r\n\r\nexport const setModalMsgVisible = <T extends boolean>(visible: T): Action<T> => ({\r\n\ttype: actionList.SET_MODALMSG,\r\n\tpayload: visible\r\n});\r\n\r\nexport const setModalMsgHeader = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_MODALMSG_HEADER,\r\n\tpayload: text\r\n});\r\n\r\nexport const setModalMsgText = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_MODALMSG_TEXT,\r\n\tpayload: text\r\n});\r\n\r\nexport const setModalMsgBtnText = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_MODALMSG_BTNTEXT,\r\n\tpayload: text\r\n});\r\n\r\nexport const setSelectedPortfolio = <T extends number>(number: T): Action<T> => ({\r\n\ttype: actionList.SET_SELECTED_PORTFOLIO,\r\n\tpayload: number\r\n});\r\n\r\n\r\nexport const setImgLoaded = <T extends boolean>(isLoaded: T): Action<T> => ({\r\n\ttype: actionList.SET_IMG_LOADED,\r\n\tpayload: isLoaded\r\n});\r\n\r\n/*\r\nexport const setTest = () => ({\r\n    type: actionList.SET_IMG_LOADED,\r\n    payload: 'hgf'\r\n})*/\r\n\r\n","import { MouseEventHandler, useEffect } from \"react\";\r\nimport \"./sidePanel.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../../assets/redux/actions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { IRemoveEventListener, PageItem, IMapStateToProps, IMapdispatchToProps, IPropsJSX } from \"src/models\";\r\n\r\n\r\nconst SidePanel: IPropsJSX = (props) => {\r\n\r\n\tconst changeNav: MouseEventHandler = () => {\r\n\t\tprops.store.nav_ham === \"\" ? props.setStore.setNavOpen() : props.setStore.setNavClose();\r\n\t};\r\n\r\n\tconst clicked: EventListener = (e: MouseEvent): void => {\r\n\t\tif (props.store.nav_ham === \"nav_opened\" && (e.clientX > 250)) {\r\n\t\t\tprops.setStore.setNavClose();\r\n\t\t}\r\n\t};\r\n \r\n\r\n\tuseEffect((): IRemoveEventListener => { //after dom rendered\r\n\t\tdocument.addEventListener(\"click\", clicked); \r\n\t\treturn (): ReturnType<typeof document.removeEventListener> => document.removeEventListener(\"click\", clicked);\r\n\t} );\r\n\r\n\r\n    \r\n\tuseEffect((): void => { //update\r\n\t\tconst _container: HTMLDivElement = document.querySelector(\".page-container\");\r\n\t\tconst _sidePanel: HTMLDivElement = document.querySelector(\".side-panel\");\r\n\t\tconst _hamburgerIcon: HTMLDivElement = document.querySelector(\".hamburger\");\r\n\t\tif (props.store.nav_ham === \"nav_opened\") {\r\n\t\t\t_container?.classList?.add(\"nav_opened\");\r\n\t\t\t_sidePanel.classList.add(\"nav_opened\");\r\n\t\t\t_hamburgerIcon.classList.add(\"nav_opened\");\r\n\t\t} else {\r\n\t\t\t_container?.classList?.remove(\"nav_opened\");\r\n\t\t\t_sidePanel.classList.remove(\"nav_opened\");\r\n\t\t\t_hamburgerIcon.classList.remove(\"nav_opened\");\r\n\t\t}\r\n\t}, [props.store.nav_ham]);\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"side-panel\">\r\n\t\t\t<figure>\r\n\t\t\t\t<Link to=\"/home\"> \r\n\t\t\t\t\t<img src={props.store.imagesMe.side} alt=\"It's me\" />\r\n\t\t\t\t</Link>\r\n\t\t\t</figure>\r\n\t\t\t<nav>\r\n\t\t\t\t<ul className=\"site-navigation\">\r\n\t\t\t\t\t{props.store.pages.map((page: PageItem, index: number) => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<li key={page.link}>\r\n\t\t\t\t\t\t\t\t<NavLink \r\n\t\t\t\t\t\t\t\t\tclassName={ ({ isActive }) => {\r\n\t\t\t\t\t\t\t\t\t\treturn isActive ? \"selected\" : \"\";\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonClick={props.setStore.setNavClose}\r\n\t\t\t\t\t\t\t\t\tto={page.link}>\r\n\t\t\t\t\t\t\t\t\t{page.text}\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t\t<div className=\"hamburger\" onClick={changeNav}>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps: IMapStateToProps = (store)  => ({store: store});\r\n\r\nconst mapDispatchToProps: IMapdispatchToProps = (dispatch) => ({\r\n\tsetStore: bindActionCreators(actions, dispatch),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SidePanel);"],"names":["setTheme","theme","type","actionList","payload","setNavOpen","setNavClose","setContactName","email","setContactEmail","text","setContactSubject","setContactMessage","setModal","status","setModalImage","url","setModalDescr","setModalLink","link","setModalMsgVisible","visible","setModalMsgHeader","setModalMsgText","setModalMsgBtnText","setSelectedPortfolio","number","setImgLoaded","isLoaded","connect","store","dispatch","setStore","bindActionCreators","actions","props","clicked","e","nav_ham","clientX","useEffect","document","addEventListener","removeEventListener","_container","querySelector","_sidePanel","_hamburgerIcon","classList","add","remove","className","to","src","imagesMe","side","alt","pages","map","page","index","isActive","onClick"],"sourceRoot":""}