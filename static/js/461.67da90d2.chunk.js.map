{"version":3,"file":"static/js/461.67da90d2.chunk.js","mappings":"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","sources":["assets/redux/actions.ts","components/modals/ModalImage.tsx"],"sourcesContent":["import { TTheme } from 'src/components/theme_switcher/theme-switcher';\r\nimport { Action } from 'src/models';\r\nimport { actionList } from 'src/models';\r\n\r\n\r\nexport const setTheme = <T extends TTheme>(theme: T): Action<T> => ({\r\n    type: actionList.SET_THEME, \r\n    payload: theme,\r\n})\r\n\r\n\r\nexport const setNavOpen = <T>(): Action<T> => ({\r\n    type: actionList.SET_NAV_OPEN,\r\n})\r\n\r\nexport const setNavClose = <T>(): Action<T> => ({\r\n    type: actionList.SET_NAV_CLOSE,\r\n})\r\n\r\nexport const setContactName = <T extends string>(email: T): Action<T> => ({\r\n    type: actionList.SET_CONTACT_NAME,\r\n    payload: email\r\n})\r\n\r\n\r\nexport const setContactEmail = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_CONTACT_EMAIL,\r\n    payload: text\r\n})\r\n\r\nexport const setContactSubject = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_CONTACT_SUBJECT,\r\n    payload: text\r\n})\r\n\r\nexport const setContactMessage = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_CONTACT_MESSAGE,\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setModal = <T extends boolean>(status: T): Action<T> => ({\r\n    type: actionList.SET_MODAL,\r\n    payload: status\r\n})\r\n\r\n\r\nexport const setModalImage = <T extends string>(url: T): Action<T> => ({\r\n    type: actionList.SET_MODAL_IMAGE,\r\n    payload: url\r\n})\r\n\r\nexport const setModalDescr = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_MODAL_DESCR,\r\n    payload: text\r\n})\r\n\r\nexport const setModalLink = <T extends string>(link: T): Action<T> => ({\r\n    type: actionList.SET_MODAL_LINK,\r\n    payload: link\r\n})\r\n\r\nexport const setModalMsgVisible = <T extends boolean>(visible: T): Action<T> => ({\r\n    type: actionList.SET_MODALMSG,\r\n    payload: visible\r\n})\r\n\r\nexport const setModalMsgHeader = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_MODALMSG_HEADER,\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgText = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_MODALMSG_TEXT,\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgBtnText = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_MODALMSG_BTNTEXT,\r\n    payload: text\r\n})\r\n\r\nexport const setSelectedPortfolio = <T extends number>(number: T): Action<T> => ({\r\n    type: actionList.SET_SELECTED_PORTFOLIO,\r\n    payload: number\r\n})\r\n\r\n\r\nexport const setImgLoaded = <T extends boolean>(isLoaded: T): Action<T> => ({\r\n    type: actionList.SET_IMG_LOADED,\r\n    payload: isLoaded\r\n})\r\n\r\n/*\r\nexport const setTest = () => ({\r\n    type: actionList.SET_IMG_LOADED,\r\n    payload: 'hgf'\r\n})*/\r\n\r\n","import * as actions from '../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { MouseEventHandler, useLayoutEffect } from \"react\";\r\nimport preloader from '../../components/preloader/preloader_template'\r\nimport store from '../../assets/redux/store'\r\nimport '@splidejs/react-splide/css';\r\nimport './modalImage.scss'\r\nimport { EmptyVoid, IPropsJSX, IRemoveEventListener } from 'src/models';\r\n\r\n\r\n\r\nconst ModalImage:IPropsJSX = (props) => {\r\n\r\n    const closeModal: EmptyVoid = () => {\r\n        props.setStore.setModal(false);\r\n    }\r\n\r\n    const checkClose: MouseEventHandler = (e) => {\r\n        if (e.currentTarget.tagName !== 'IMG') {\r\n            closeModal()\r\n        }\r\n    }\r\n\r\n    \r\n\r\n     \r\n    useLayoutEffect(() => {\r\n        const _modal: HTMLElement =  document.querySelector(\".modal__background\");\r\n        store.getState().modal ? _modal.classList.add('show') : _modal.classList.remove('show')\r\n    }, [store.getState().modal])\r\n\r\n\r\n    const modalBgListener = (e) => {\r\n        e.target === e.currentTarget && closeModal()\r\n    }\r\n\r\n\r\n    useLayoutEffect((): IRemoveEventListener => {\r\n        document.querySelector<HTMLElement>(\".modal__background\").addEventListener('click', modalBgListener);\r\n        document.addEventListener('keydown', (e) => e.key === 'Escape' && closeModal());\r\n        \r\n        let _target: HTMLElement = document.querySelector('.modal').childNodes[0].childNodes[0] as HTMLElement;\r\n        let _image: HTMLImageElement = document.createElement(\"img\");\r\n        _target.innerHTML = preloader();\r\n        _image.onload = () => { _target?.replaceChildren(_image) }\r\n        _image.src = store.getState().modalImage;\r\n        _image.alt = store.getState().modalDescr;\r\n        return () => {\r\n            document.querySelector<HTMLElement>(\".modal__background\").removeEventListener('click', (e) => e.target === e.currentTarget && closeModal());\r\n            document.removeEventListener('keydown', (e) => e.key === 'Escape' && closeModal());\r\n        }\r\n    },[store.getState().modalImage])\r\n    \r\n    return (\r\n        <div className=\"modal__background\" onClick={checkClose}>\r\n            <div className=\"modal\">\r\n                <div onClick={checkClose}>\r\n                    <div onClick={checkClose}>\r\n                        <img src=\"\" alt=\"\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal__close\">\r\n                <svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\" onClick={closeModal} aria-label=\"Close this modal window\">\r\n                    <path onClick={closeModal} d=\"M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4  L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1  c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1  c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z\"/>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalImage);"],"names":["setTheme","theme","type","actionList","payload","setNavOpen","setNavClose","setContactName","email","setContactEmail","text","setContactSubject","setContactMessage","setModal","status","setModalImage","url","setModalDescr","setModalLink","link","setModalMsgVisible","visible","setModalMsgHeader","setModalMsgText","setModalMsgBtnText","setSelectedPortfolio","number","setImgLoaded","isLoaded","connect","store","dispatch","setStore","bindActionCreators","actions","props","closeModal","checkClose","e","currentTarget","tagName","useLayoutEffect","_modal","document","querySelector","modal","classList","add","remove","modalBgListener","target","addEventListener","key","_target","childNodes","_image","createElement","innerHTML","preloader","onload","replaceChildren","src","modalImage","alt","modalDescr","removeEventListener","className","onClick","viewBox","xmlns","d"],"sourceRoot":""}