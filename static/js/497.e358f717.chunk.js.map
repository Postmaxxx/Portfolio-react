{"version":3,"file":"static/js/497.e358f717.chunk.js","mappings":"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","sources":["assets/js/ImgWithPreloader.tsx","assets/redux/actions.ts","components/modals/ModalSplide.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Preloader from \"src/components/preloader/Preloader\";\r\n\r\nconst ImgWithPreloader = ({link, alt}) => {\r\n\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\tconst img = useRef<HTMLImageElement>();\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loaded || <Preloader />}\r\n\t\t\t<img ref={img} src={link} alt={alt} onLoad={() => setLoaded(true)} style={{display: loaded ? \"block\" : \"none\"}} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\nexport default ImgWithPreloader;","import { TTheme } from \"src/components/theme_switcher/theme-switcher\";\r\nimport { Action } from \"src/models\";\r\nimport { actionList } from \"src/models\";\r\n\r\n\r\nexport const setTheme = <T extends TTheme>(theme: T): Action<T> => ({\r\n\ttype: actionList.SET_THEME, \r\n\tpayload: theme,\r\n});\r\n\r\n\r\nexport const setNavOpen = <T>(): Action<T> => ({\r\n\ttype: actionList.SET_NAV_OPEN,\r\n});\r\n\r\nexport const setNavClose = <T>(): Action<T> => ({\r\n\ttype: actionList.SET_NAV_CLOSE,\r\n});\r\n\r\nexport const setContactName = <T extends string>(email: T): Action<T> => ({\r\n\ttype: actionList.SET_CONTACT_NAME,\r\n\tpayload: email\r\n});\r\n\r\n\r\nexport const setContactEmail = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_CONTACT_EMAIL,\r\n\tpayload: text\r\n});\r\n\r\nexport const setContactSubject = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_CONTACT_SUBJECT,\r\n\tpayload: text\r\n});\r\n\r\nexport const setContactMessage = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_CONTACT_MESSAGE,\r\n\tpayload: text\r\n});\r\n\r\n\r\nexport const setModalImage = <T extends boolean>(status: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL_IMAGE,\r\n\tpayload: status\r\n});\r\n\r\nexport const setModalSplide = <T extends boolean>(status: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL_SPLIDE,\r\n\tpayload: status\r\n});\r\n\r\n/*\r\nexport const setModalImage = <T extends string>(url: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL_IMAGE,\r\n\tpayload: url\r\n});\r\n\r\nexport const setModalDescr = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL_DESCR,\r\n\tpayload: text\r\n});\r\n\r\nexport const setModalLink = <T extends string>(link: T): Action<T> => ({\r\n\ttype: actionList.SET_MODAL_LINK,\r\n\tpayload: link\r\n});\r\n*/\r\nexport const setModalMsgVisible = <T extends boolean>(visible: T): Action<T> => ({\r\n\ttype: actionList.SET_MODALMSG,\r\n\tpayload: visible\r\n});\r\n\r\nexport const setModalMsgHeader = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_MODALMSG_HEADER,\r\n\tpayload: text\r\n});\r\n\r\nexport const setModalMsgText = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_MODALMSG_TEXT,\r\n\tpayload: text\r\n});\r\n\r\nexport const setModalMsgBtnText = <T extends string>(text: T): Action<T> => ({\r\n\ttype: actionList.SET_MODALMSG_BTNTEXT,\r\n\tpayload: text\r\n});\r\n\r\nexport const setSelectedPortfolio = <T extends number>(number: T): Action<T> => ({\r\n\ttype: actionList.SET_SELECTED_PORTFOLIO,\r\n\tpayload: number\r\n});\r\n\r\nexport const setSelectedPortfolioImage = <T extends number>(number: T): Action<T> => ({\r\n\ttype: actionList.SET_SELECTED_PORTFOLIO_IMAGE,\r\n\tpayload: number\r\n});\r\n\r\n/*\r\nexport const setImgLoaded = <T extends boolean>(isLoaded: T): Action<T> => ({\r\n\ttype: actionList.SET_IMG_LOADED,\r\n\tpayload: isLoaded\r\n});\r\n*/\r\n/*\r\nexport const setTest = () => ({\r\n    type: actionList.SET_IMG_LOADED,\r\n    payload: 'hgf'\r\n})*/\r\n\r\n","import * as actions from \"../../assets/redux/actions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { KeyboardEvent, KeyboardEventHandler, MouseEventHandler, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport \"@splidejs/react-splide/css\";\r\nimport \"./modalSplide.scss\";\r\nimport { EmptyVoid, IMapdispatchToProps, IMapStateToProps, IPropsJSX, IRemoveEventListener } from \"src/models\";\r\nimport Splide from \"@splidejs/splide\";\r\nimport ImgWithPreloader from \"src/assets/js/ImgWithPreloader\";\r\nimport { findBestSuitedImg } from \"src/assets/js/findBestSuitedImg\";\r\n\r\n\r\ninterface IOptionsThumbs {\r\n\t[propName: string]: any;\r\n}\r\n\r\nconst ModalSplide = (props) => {\r\n\tconst _splideMain = useRef<HTMLDivElement>();\r\n\tconst _splideThumbs = useRef<HTMLDivElement>();\r\n\tconst mainRef = useRef<Splide>();\r\n\tconst thumbsRef = useRef<Splide>();\r\n\t\t\r\n\tconst optionsThumbs:IOptionsThumbs = {\r\n\t\tlazyLoad\t: false,\r\n\t\tperPage\t\t: 12,\r\n\t\tgap        \t: 10,\r\n\t\trewind     \t: false,\r\n\t\tpagination \t: false,\r\n\t\tisNavigation: true,\r\n\t\tfocus\t\t: \"center\",\r\n\t\tbreakpoints\t: {\r\n\t\t\t1600: {\r\n\t\t\t\tperPage: 10\r\n\t\t\t}, \r\n\t\t\t1241: {\r\n\t\t\t\tperPage: 8\r\n\t\t\t}, \r\n\t\t\t992: {\r\n\t\t\t\tperPage: 7\r\n\t\t\t}, \r\n\t\t\t768: {\r\n\t\t\t\tperPage: 5\r\n\t\t\t}, \r\n\t\t\t480: {\r\n\t\t\t\tperPage: 4\r\n\t\t\t}, \r\n\t\t},\r\n\t};\r\n\r\n\r\n\tconst optionsMain = {\r\n\t\tlazyLoad: true,\r\n\t\ttype      : \"fade\",\r\n\t\trewind    : false,\r\n\t\tpagination: false,\r\n\t\tspeed: 500,\r\n\t\twheel: true,\r\n\t\twheelSleep: 300,\r\n\t\tbreakpoints\t: {\r\n\t\t\t768: {\r\n\t\t\t\twheel: false\r\n\t\t\t}, \r\n\t\t}\r\n\t};\r\n\r\n\tconst closeSplideModal = () => {\r\n\t\tprops.setStore.setSelectedPortfolioImage(thumbsRef.current.index);\r\n\t\tdocument.querySelector(\"body\").classList.remove(\"noscroll\");\r\n\t\tprops.setStore.setModalSplide(false);\r\n\t};\r\n\r\n\tconst showSlide = (slideToGo) => {\r\n\t\tthumbsRef.current.go(slideToGo);\r\n\t};\r\n\r\n\tfunction modalKeyListener (e) {\r\n\t\te.key === \"Escape\" && closeSplideModal();\r\n\t\te.keyCode === 37 && showSlide(\"<\");\r\n\t\te.keyCode === 39 && showSlide(\">\");\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tthumbsRef.current = new Splide(_splideThumbs.current, optionsThumbs);\r\n\t\tmainRef.current = new Splide(_splideMain.current, optionsMain);\r\n\t\tmainRef.current.sync(thumbsRef.current);\r\n\t\tmainRef.current.mount();\r\n\t\tthumbsRef.current.mount();\r\n\t\t\r\n\t\treturn () => {\r\n\t\t\tthumbsRef.current.destroy();\r\n\t\t\tmainRef.current.destroy();\r\n\t\t};\r\n\t\t\r\n\t}, [props.selected]);\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tshowSlide(props.selectedImage);\r\n\t\tprops.show && document.addEventListener(\"keyup\", modalKeyListener);\r\n\t\tprops.show && document.querySelector(\"body\").classList.add(\"noscroll\");\r\n\t\treturn (() => {\r\n\t\t\tdocument.removeEventListener(\"keyup\", modalKeyListener);\r\n\t\t});\r\n\t}, [props.show]);\r\n\r\n\r\n\tconst renderMemo = useMemo(() => {\r\n\t\treturn (\r\n\t\t\t<div className={props.show ? \"modal-splide__background show\" : \"modal-splide__background\"}>\r\n\t\t\t\t<div className=\"modal\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div id=\"modalMain\" className=\"splide\" ref={_splideMain}>\r\n\t\t\t\t\t\t\t\t<div className=\"splide__track\">\r\n\t\t\t\t\t\t\t\t\t<ul className=\"splide__list\">\r\n\t\t\t\t\t\t\t\t\t\t{props.list[props.selected].images.map((slide) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"splide__slide\" key={slide.images[0].image}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{props.show ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ImgWithPreloader link={slide.images[slide.images.length - 1].image} alt={slide.descr} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t\t\t<div id=\"modalThumbs\" className=\"splide\" ref={_splideThumbs}>\r\n\t\t\t\t\t\t\t\t<div className=\"splide__track\">\r\n\t\t\t\t\t\t\t\t\t<ul className=\"splide__list\">\r\n\t\t\t\t\t\t\t\t\t\t{props.list[props.selected].images.map((slide) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"splide__slide\" key={slide.images[0].image}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{props.show ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ImgWithPreloader link={slide.images[0].image} alt={slide.descr} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<button className=\"modal__close\" onClick={closeSplideModal}>\r\n\t\t\t\t\t<svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\" aria-label=\"Close this modal window\">\r\n\t\t\t\t\t\t<path d=\"M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4  L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1  c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1  c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}, [props.show, props.selected]\r\n\t);\r\n\t\r\n\treturn renderMemo; \r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = (state)  => {\r\n\treturn {\r\n\t\tselected: state.portfolios.selected,\r\n\t\tselectedImage: state.portfolios.selectedImage,\r\n\t\tshow: state.modalSplide.show,\r\n\t\tlist: state.portfolios.list\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps: IMapdispatchToProps = (dispatch) => ({\r\n\tsetStore: bindActionCreators(actions, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalSplide);\r\n"],"names":["link","alt","useState","loaded","setLoaded","img","useRef","ref","src","onLoad","style","display","setTheme","theme","type","actionList","payload","setNavOpen","setNavClose","setContactName","email","setContactEmail","text","setContactSubject","setContactMessage","setModalImage","status","setModalSplide","setModalMsgVisible","visible","setModalMsgHeader","setModalMsgText","setModalMsgBtnText","setSelectedPortfolio","number","setSelectedPortfolioImage","connect","state","selected","portfolios","selectedImage","show","modalSplide","list","dispatch","setStore","bindActionCreators","actions","props","_splideMain","_splideThumbs","mainRef","thumbsRef","optionsThumbs","lazyLoad","perPage","gap","rewind","pagination","isNavigation","focus","breakpoints","optionsMain","speed","wheel","wheelSleep","closeSplideModal","current","index","document","querySelector","classList","remove","showSlide","slideToGo","go","modalKeyListener","e","key","keyCode","useEffect","Splide","sync","mount","destroy","addEventListener","add","removeEventListener","useMemo","className","id","images","map","slide","ImgWithPreloader","length","image","descr","onClick","viewBox","xmlns","d"],"sourceRoot":""}