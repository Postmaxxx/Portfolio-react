{"version":3,"file":"static/js/113.77769b6d.chunk.js","mappings":"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","sources":["assets/redux/actions.js","components/blocks/list3d/List3d.jsx","components/blocks/list3d_v/List3d_v.jsx","components/blocks/list/List.jsx","components/blocks/info_portfolio/Info_portfolio.jsx","components/blocks/info_portfolio-slide/Info_portfolio-slide.jsx","pages/portfolio/Portfolio.jsx"],"sourcesContent":["export const setTheme = (theme) => ({\r\n    type: 'SET_THEME',\r\n    payload: theme\r\n})\r\n\r\nexport const setNavOpen = () => ({\r\n    type: 'SET_NAV_OPEN',\r\n})\r\n\r\nexport const setNavClose = () => ({\r\n    type: 'SET_NAV_CLOSE',\r\n})\r\n\r\n\r\nexport const setContactName = (text) => ({\r\n    type: 'SET_CONTACT_NAME',\r\n    payload: text\r\n})\r\n\r\nexport const setContactEmail = (text) => ({\r\n    type: 'SET_CONTACT_EMAIL',\r\n    payload: text\r\n})\r\n\r\nexport const setContactSubject = (text) => ({\r\n    type: 'SET_CONTACT_SUBJECT',\r\n    payload: text\r\n})\r\n\r\nexport const setContactMessage = (text) => ({\r\n    type: 'SET_CONTACT_MESSAGE',\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setModal = (status) => ({\r\n    type: 'SET_MODAL',\r\n    payload: status\r\n})\r\n\r\n\r\nexport const setModalImage = (url) => ({\r\n    type: 'SET_MODAL_IMAGE',\r\n    payload: url\r\n})\r\n\r\nexport const setModalDescr = (text) => ({\r\n    type: 'SET_MODAL_DESCR',\r\n    payload: text\r\n})\r\n\r\nexport const setModalLink = (link) => ({\r\n    type: 'SET_MODAL_LINK',\r\n    payload: link\r\n})\r\n\r\nexport const setModalMsgVisible = (visible) => ({\r\n    type: 'SET_MODALMSG',\r\n    payload: visible\r\n})\r\n\r\nexport const setModalMsgHeader = (text) => ({\r\n    type: 'SET_MODALMSG_HEADER',\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgText = (text) => ({\r\n    type: 'SET_MODALMSG_TEXT',\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgBtnText = (text) => ({\r\n    type: 'SET_MODALMSG_BTNTEXT',\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setCurrentGallery = (gallery) => ({\r\n    type: 'SET_CURRENT_GALLERY',\r\n    payload: gallery\r\n})\r\n\r\n\r\nexport const setSelectedPortfolio = (number) => ({\r\n    type: 'SET_SELECTED_PORTFOLIO',\r\n    payload: number\r\n})\r\n\r\n\r\nexport const setImgLoaded = (isLoaded) => ({\r\n    type: 'SET_IMG_LOADED',\r\n    payload: isLoaded\r\n})\r\n/*\r\nexport const setSlideIndex = (index) => ({\r\n    type: 'SET_SLIDE_INDEX',\r\n    payload: index\r\n})\r\n*/","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { useEffect } from \"react\";\r\nimport './list3d.scss'\r\n\r\nlet selected = 0;\r\nlet rotateStep = 0;\r\nlet scrollDelay = 50;\r\nlet timeoutScroll = undefined;\r\nlet listLength = 0\r\nlet stepsToMove = 0;\r\n\r\nconst List3d = (props) => {\r\n    stepsToMove = props.store.portfolios.selected - selected;\r\n    selected = props.store.portfolios.selected;\r\n    listLength = props.store.portfolios.list.length;\r\n\r\n    if (stepsToMove != 0) {\r\n        if (Math.abs(stepsToMove) > listLength / 2) {\r\n            stepsToMove = stepsToMove - Math.sign(stepsToMove)*listLength;\r\n        }\r\n        rotateStep = rotateStep + stepsToMove;  \r\n    }\r\n\r\n    const listScroll = (e) => {\r\n        if (!timeoutScroll) {\r\n            timeoutScroll = setTimeout(() => {\r\n                clearTimeout(timeoutScroll);\r\n                timeoutScroll = undefined;\r\n            }, scrollDelay)\r\n            e.deltaY > 0 ? rotateStep++ : rotateStep--;\r\n        }\r\n        selected = rotateStep > 0 ? (rotateStep % listLength) : ((listLength + rotateStep % listLength) % listLength)\r\n        props.setStore.setSelectedPortfolio(selected)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.querySelector('.list3d__container'). addEventListener('wheel', (e) => listScroll(e))\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"list3d__container\">\r\n            <div className=\"list3d\" style={{transform: `rotateZ(${(-360 / listLength) * rotateStep}deg)`}}>\r\n                {props.store.portfolios.list.map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 6);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateZ(${index * step}deg) translateX(${listLength * 15}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n                    \r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>\r\n                            <a target=\"_blank\" href={portfolio.link}>{portfolio.name}</a>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List3d);\r\n/*\r\n        <div className=\"list__container\">\r\n            <div className=\"list3d\" style={{transform: `rotateX(-1deg) rotateY(${(-360 / listLength) * rotateStep}deg)`}}>\r\n                {props.store.portfolios.list.map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 3);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateY(${index * step}deg) translateZ(${listLength * 20}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n\r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>{portfolio.name}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n                <div className=\"list__container\">\r\n            <div className=\"list3d\" style={{transform: `rotateZ(${(-360 / listLength) * rotateStep}deg)`}}>\r\n                {props.store.portfolios.list.map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 3);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateZ(${index * step}deg) translateX(${listLength * 4}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n\r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>{portfolio.name}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n*/","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { useEffect } from \"react\";\r\nimport './list3d_v.scss'\r\n\r\nlet selected = 0;\r\nlet rotateStep = 0;\r\nlet scrollDelay = 50;\r\nlet timeoutScroll = undefined;\r\nlet listLength = 0\r\nlet stepsToMove = 0;\r\n\r\nconst List3d_v = (props) => {\r\n    stepsToMove = props.store.portfolios.selected - selected;\r\n    selected = props.store.portfolios.selected;\r\n    listLength = props.store.portfolios.list.length;\r\n\r\n    if (stepsToMove != 0) {\r\n        if (Math.abs(stepsToMove) > listLength / 2) {\r\n            stepsToMove = stepsToMove - Math.sign(stepsToMove)*listLength;\r\n        }\r\n        rotateStep = rotateStep + stepsToMove;  \r\n    }\r\n\r\n    const listScroll = (e) => {\r\n        e.preventDefault();\r\n        if (!timeoutScroll) {\r\n            timeoutScroll = setTimeout(() => {\r\n                clearTimeout(timeoutScroll);\r\n                timeoutScroll = undefined;\r\n            }, scrollDelay)\r\n            e.deltaY > 0 ? rotateStep++ : rotateStep--;\r\n        }\r\n        selected = rotateStep > 0 ? (rotateStep % listLength) : ((listLength + rotateStep % listLength) % listLength)\r\n        props.setStore.setSelectedPortfolio(selected)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.querySelector('.list3d_v__container'). addEventListener('wheel', (e) => listScroll(e))\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"list3d_v__container\">\r\n            <div className=\"list3d_v\" style={{transform: `rotateX(${(360 / listLength) * rotateStep}deg)`}}>\r\n                {[...props.store.portfolios.list].map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 4);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateX(${-index * step}deg) translateZ(${listLength * 6}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n\r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>\r\n                            <a target=\"_blank\" href={portfolio.link}>{portfolio.name}</a>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List3d_v);\r\n/*\r\n        <div className=\"list__container\">\r\n            <div className=\"list3d\" style={{transform: `rotateX(-1deg) rotateY(${(-360 / listLength) * rotateStep}deg)`}}>\r\n                {props.store.portfolios.list.map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 3);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateY(${index * step}deg) translateZ(${listLength * 20}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n\r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>{portfolio.name}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n                <div className=\"list__container\">\r\n            <div className=\"list3d\" style={{transform: `rotateZ(${(-360 / listLength) * rotateStep}deg)`}}>\r\n                {props.store.portfolios.list.map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 3);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateZ(${index * step}deg) translateX(${listLength * 4}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n\r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>{portfolio.name}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n*/","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport './list.scss'\r\n\r\nconst List = (props) => {\r\n\r\n    const selectPortfolio = (index) => {\r\n        props.setStore.setSelectedPortfolio(index)\r\n    }\r\n\r\n    return(\r\n        <div className=\"list__container\">\r\n            <div className=\"list\">\r\n                <ul>\r\n                    {props.store.portfolios.list.map((portfolio, index) => {\r\n                        return (\r\n                            <li \r\n                                key={index} \r\n                                className={index == props.store.portfolios.selected ? 'selected' : ''}\r\n                                onClick={() => selectPortfolio(index)}\r\n                                >\r\n                                {portfolio.name}\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport './info_portfolio.scss'\r\n\r\nconst InfoPortfolio = (props) => {\r\n    return(\r\n        <div className=\"info_portfolio__container\">\r\n            <p>{props.store.portfolios.list[props.store.portfolios.selected].descr}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoPortfolio);","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport './info_portfolio-slide.scss'\r\n\r\nconst InfoPortfolioSlide = (props) => {\r\n    return(\r\n        <div className=\"info_portfolio-slide__container\">\r\n            <p>{props.store.modalDescr} </p> \r\n            {props.store.modalLink ? \r\n                (<a target='_blank' href={props.store.modalLink}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\r\n                        <polyline points=\"15 3 21 3 21 9\"></polyline>\r\n                        <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\r\n                    </svg>\r\n                </a>) \r\n                : \r\n                (null)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoPortfolioSlide);","import { Suspense, lazy } from \"react\";\r\nimport List3d from '../../components/blocks/list3d/List3d'\r\nimport List3d_v from '../../components/blocks/list3d_v/List3d_v'\r\nimport List from '../../components/blocks/list/List'\r\nimport InfoPortfolio from '../../components/blocks/info_portfolio/Info_portfolio'\r\nimport InfoPortfolioSlide from \"../../components/blocks/info_portfolio-slide/Info_portfolio-slide\";\r\nimport Preloader from \"../../components/preloader/Preloader.jsx\";\r\nimport './portfolio.scss'\r\nconst LazySplidePortfolio = lazy(() => import('../../components/blocks/splide_portfolios/Splide_portfolio'));\r\n\r\nconst Portfolio = () => {\r\n    return(\r\n        <div className=\"page-container\">\r\n            <div className=\"page_portfolio\">\r\n                <section className='portfolio'> \r\n                    <div className=\"header_portfolio\">\r\n                        <h2>Portfolios<em>Portfolios</em></h2>\r\n                        <div>\r\n                            <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"256pt\" height=\"256pt\" viewBox=\"0 0 256 256\" preserveAspectRatio=\"xMidYMid meet\">\r\n                                <g transform=\"translate(0,256) scale(0.1,-0.1)\" fill=\"#000000\" stroke=\"none\">\r\n                                    <path className='body' d=\"M195 2524 c-55 -19 -109 -66 -143 -122 -26 -46 -27 -51 -30 -234 -3 -178 -3 -187 17 -207 l21 -21 1090 0 c1077 0 1090 0 1110 20 25 25 25 55 0 80 -20 20 -33 20 -1070 20 l-1050 0 0 128 c0 143 11 175 72 212 32 20 53 20 1068 20 1015 0 1036 0 1068 -20 18 -11 41 -34 52 -52 20 -32 20 -53 20 -1068 0 -1015 0 -1036 -20 -1068 -11 -18 -34 -41 -52 -52 -32 -20 -53 -20 -1068 -20 -1015 0 -1036 0 -1068 20 -18 11 -41 34 -52 52 -19 32 -20 52 -20 791 0 744 0 757 -20 777 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20 -20 -20 -20 -33 -20 -778 0 -834 -2 -809 61 -885 17 -20 52 -49 77 -65 l47 -27 1075 0 1075 0 47 27 c25 16 60 45 77 65 64 78 62 23 59 1184 l-3 1054 -27 47 c-35 58 -88 103 -147 123 -65 22 -2104 21 -2166 -1z\"/>\r\n                                    <path className='dot dot_left' d=\"M280 2280 c-11 -11 -20 -29 -20 -40 0 -26 34 -60 60 -60 26 0 60 34 60 60 0 11 -9 29 -20 40 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20z\"/>\r\n                                    <path className='dot dot_middle' d=\"M480 2280 c-11 -11 -20 -29 -20 -40 0 -26 34 -60 60 -60 26 0 60 34 60 60 0 11 -9 29 -20 40 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20z\"/>\r\n                                    <path className='dot dot_right' d=\"M680 2280 c-11 -11 -20 -29 -20 -40 0 -11 9 -29 20 -40 11 -11 29 -20 40 -20 11 0 29 9 40 20 11 11 20 29 20 40 0 11 -9 29 -20 40 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20z\"/>\r\n                                    <path className='link link_left' d=\"M590 1311 c-51 -16 -108 -51 -137 -85 -38 -42 -73 -133 -73 -186 0 -53 35 -144 73 -186 16 -20 53 -47 81 -62 47 -25 62 -27 198 -30 138 -4 147 -3 167 17 24 24 27 49 7 77 -13 17 -31 20 -159 24 -127 4 -149 8 -173 26 -53 39 -69 71 -69 134 0 63 16 95 69 134 27 20 39 21 386 21 347 0 359 -1 386 -21 43 -31 63 -64 73 -118 14 -74 59 -98 102 -55 18 18 21 29 16 69 -8 62 -46 139 -91 177 -19 17 -60 40 -91 52 -53 20 -74 21 -398 20 -188 0 -353 -4 -367 -8z\"/>\r\n                                    <path className='link link_right' d=\"M1700 1300 c-24 -24 -25 -49 -6 -76 12 -16 31 -20 139 -24 106 -4 130 -8 153 -26 53 -39 69 -71 69 -134 0 -63 -16 -95 -69 -134 -27 -20 -39 -21 -386 -21 -347 0 -359 1 -386 21 -43 31 -63 64 -73 118 -13 73 -59 98 -101 56 -26 -26 -25 -65 1 -135 26 -71 68 -119 133 -153 l51 -27 356 -3 c343 -3 358 -2 413 19 72 27 120 68 154 133 38 73 38 179 0 252 -58 111 -147 154 -318 154 -97 0 -112 -2 -130 -20z\"/>\r\n                                </g>\r\n                            </svg>\r\n                            <List3d />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"portfolio__content\">\r\n                        <List />\r\n                        <List3d_v />\r\n                        <div className=\"portfolio__splide\">\r\n                            <InfoPortfolio />\r\n                            <Suspense fallback={<Preloader />}>\r\n                                <LazySplidePortfolio />\r\n                            </Suspense>\r\n                            <InfoPortfolioSlide />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Portfolio;"],"names":["setTheme","theme","type","payload","setNavOpen","setNavClose","setContactName","text","setContactEmail","setContactSubject","setContactMessage","setModal","status","setModalImage","url","setModalDescr","setModalLink","link","setModalMsgVisible","visible","setModalMsgHeader","setModalMsgText","setModalMsgBtnText","setCurrentGallery","gallery","setSelectedPortfolio","number","setImgLoaded","isLoaded","selected","rotateStep","timeoutScroll","undefined","listLength","stepsToMove","connect","store","dispatch","setStore","bindActionCreators","actions","props","portfolios","list","length","Math","abs","sign","useEffect","document","querySelector","addEventListener","e","setTimeout","clearTimeout","deltaY","listScroll","className","style","transform","map","portfolio","index","portfolioStyle","step","opacity","min","target","href","name","preventDefault","onClick","selectPortfolio","descr","modalDescr","modalLink","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","LazySplidePortfolio","lazy","version","width","height","preserveAspectRatio","Suspense","fallback","Preloader"],"sourceRoot":""}