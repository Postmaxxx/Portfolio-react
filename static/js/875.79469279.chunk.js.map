{"version":3,"file":"static/js/875.79469279.chunk.js","mappings":"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","sources":["assets/redux/actions.js","components/side_panel/SidePanel.jsx"],"sourcesContent":["export const setTheme = (theme) => ({\r\n    type: 'SET_THEME',\r\n    payload: theme\r\n})\r\n\r\nexport const setNavOpen = () => ({\r\n    type: 'SET_NAV_OPEN',\r\n})\r\n\r\nexport const setNavClose = () => ({\r\n    type: 'SET_NAV_CLOSE',\r\n})\r\n\r\n\r\nexport const setContactName = (text) => ({\r\n    type: 'SET_CONTACT_NAME',\r\n    payload: text\r\n})\r\n\r\nexport const setContactEmail = (text) => ({\r\n    type: 'SET_CONTACT_EMAIL',\r\n    payload: text\r\n})\r\n\r\nexport const setContactSubject = (text) => ({\r\n    type: 'SET_CONTACT_SUBJECT',\r\n    payload: text\r\n})\r\n\r\nexport const setContactMessage = (text) => ({\r\n    type: 'SET_CONTACT_MESSAGE',\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setModal = (status) => ({\r\n    type: 'SET_MODAL',\r\n    payload: status\r\n})\r\n\r\n\r\nexport const setModalImage = (url) => ({\r\n    type: 'SET_MODAL_IMAGE',\r\n    payload: url\r\n})\r\n\r\nexport const setModalDescr = (text) => ({\r\n    type: 'SET_MODAL_DESCR',\r\n    payload: text\r\n})\r\n\r\nexport const setModalLink = (link) => ({\r\n    type: 'SET_MODAL_LINK',\r\n    payload: link\r\n})\r\n\r\n\r\n\r\nexport const setCurrentGallery = (gallery) => ({\r\n    type: 'SET_CURRENT_GALLERY',\r\n    payload: gallery\r\n})\r\n\r\n\r\nexport const setSelectedPortfolio = (number) => ({\r\n    type: 'SET_SELECTED_PORTFOLIO',\r\n    payload: number\r\n})\r\n\r\n\r\nexport const setImgLoaded = (isLoaded) => ({\r\n    type: 'SET_IMG_LOADED',\r\n    payload: isLoaded\r\n})\r\n/*\r\nexport const setSlideIndex = (index) => ({\r\n    type: 'SET_SLIDE_INDEX',\r\n    payload: index\r\n})\r\n*/","import React from 'react';\r\nimport './sidePanel.scss';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport * as actions from '../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\n\r\nclass SidePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.changeNav = this.changeNav.bind(this);\r\n        this.clicked = this.clicked.bind(this);\r\n        this.clickListener = undefined;\r\n    }\r\n\r\n    changeNav() {\r\n        this.props.store.nav_ham === '' ? this.props.setStore.setNavOpen() : this.props.setStore.setNavClose()\r\n    }\r\n\r\n    clicked(e) {\r\n        if (this.props.store.nav_ham === 'nav_opened' && (e.clientX > 250)) {\r\n            this.props.setStore.setNavClose();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._container = document.querySelector('.page-container');\r\n        this._sidePanel = document.querySelector('.side-panel');\r\n        this._hamburgerIcon = document.querySelector('.hamburger');\r\n        this.clickListener = document.addEventListener('click', (e) => this.clicked(e))\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.store.nav_ham === 'nav_opened') {\r\n            this._container?.classList?.add('nav_opened');\r\n            this._sidePanel.classList.add('nav_opened');\r\n            this._hamburgerIcon.classList.add('nav_opened');\r\n        } else {\r\n            this._container?.classList?.remove('nav_opened');\r\n            this._sidePanel.classList.remove('nav_opened');\r\n            this._hamburgerIcon.classList.remove('nav_opened');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"side-panel\">\r\n                <figure>\r\n                    <Link to=\"/home\"> \r\n                        <img src={this.props.store.imagesMe.side} alt=\"My photo\" />\r\n                    </Link>\r\n                </figure>\r\n                <nav>\r\n                    <ul className=\"site-navigation\">\r\n                        {this.props.store.pages.map((page, index) => {\r\n                            return(\r\n                                <li key={index}>\r\n                                    <NavLink \r\n                                        className={ ({ isActive }) => {\r\n                                            return isActive ? 'selected' : ''\r\n                                        }}\r\n                                        onClick={() => {this.props.setStore.setNavClose()}}\r\n                                        to={page.link}>\r\n                                        {page.text}\r\n                                    </NavLink>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n                <div className=\"hamburger\" onClick={() => this.changeNav()}>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SidePanel);"],"names":["setTheme","theme","type","payload","setNavOpen","setNavClose","setContactName","text","setContactEmail","setContactSubject","setContactMessage","setModal","status","setModalImage","url","setModalDescr","setModalLink","link","setCurrentGallery","gallery","setSelectedPortfolio","number","setImgLoaded","isLoaded","SidePanel","props","changeNav","bind","clicked","clickListener","undefined","this","store","nav_ham","setStore","e","clientX","_container","document","querySelector","_sidePanel","_hamburgerIcon","addEventListener","classList","add","remove","className","to","src","imagesMe","side","alt","pages","map","page","index","isActive","onClick","React","connect","dispatch","bindActionCreators","actions"],"sourceRoot":""}