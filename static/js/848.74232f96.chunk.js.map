{"version":3,"file":"static/js/848.74232f96.chunk.js","mappings":"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","sources":["assets/redux/actions.ts","components/blocks/list3d/List3d.tsx","components/blocks/list3d_v/List3d_v.jsx","components/blocks/list/List.tsx","components/blocks/info_portfolio/Info_portfolio.jsx","components/blocks/info_portfolio-slide/Info_portfolio-slide.jsx","pages/portfolio/Portfolio.tsx"],"sourcesContent":["import { Action } from 'src/models';\r\nimport { actionList } from 'src/models';\r\n\r\n\r\nexport const setTheme = <T extends string>(theme: T): Action<T> => ({\r\n    type: actionList.SET_THEME, \r\n    payload: theme,\r\n})\r\n\r\n\r\nexport const setNavOpen = <T>(): Action<T> => ({\r\n    type: actionList.SET_NAV_OPEN,\r\n})\r\n\r\nexport const setNavClose = <T>(): Action<T> => ({\r\n    type: actionList.SET_NAV_CLOSE,\r\n})\r\n\r\nexport const setContactName = <T extends string>(email: T): Action<T> => ({\r\n    type: actionList.SET_CONTACT_NAME,\r\n    payload: email\r\n})\r\n\r\n\r\nexport const setContactEmail = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_CONTACT_EMAIL,\r\n    payload: text\r\n})\r\n\r\nexport const setContactSubject = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_CONTACT_SUBJECT,\r\n    payload: text\r\n})\r\n\r\nexport const setContactMessage = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_CONTACT_MESSAGE,\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setModal = <T extends boolean>(status: T): Action<T> => ({\r\n    type: actionList.SET_MODAL,\r\n    payload: status\r\n})\r\n\r\n\r\nexport const setModalImage = <T extends string>(url: T): Action<T> => ({\r\n    type: actionList.SET_MODAL_IMAGE,\r\n    payload: url\r\n})\r\n\r\nexport const setModalDescr = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_MODAL_DESCR,\r\n    payload: text\r\n})\r\n\r\nexport const setModalLink = <T extends string>(link: T): Action<T> => ({\r\n    type: actionList.SET_MODAL_LINK,\r\n    payload: link\r\n})\r\n\r\nexport const setModalMsgVisible = <T extends boolean>(visible: T): Action<T> => ({\r\n    type: actionList.SET_MODALMSG,\r\n    payload: visible\r\n})\r\n\r\nexport const setModalMsgHeader = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_MODALMSG_HEADER,\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgText = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_MODALMSG_TEXT,\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgBtnText = <T extends string>(text: T): Action<T> => ({\r\n    type: actionList.SET_MODALMSG_BTNTEXT,\r\n    payload: text\r\n})\r\n\r\nexport const setSelectedPortfolio = <T extends number>(number: T): Action<T> => ({\r\n    type: actionList.SET_SELECTED_PORTFOLIO,\r\n    payload: number\r\n})\r\n\r\n\r\nexport const setImgLoaded = <T extends boolean>(isLoaded: T): Action<T> => ({\r\n    type: actionList.SET_IMG_LOADED,\r\n    payload: isLoaded\r\n})\r\n\r\n/*\r\nexport const setTest = () => ({\r\n    type: actionList.SET_IMG_LOADED,\r\n    payload: 'hgf'\r\n})*/","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport './list3d.scss'\r\nimport { IMapdispatchToProps, IMapStateToProps, IProps, ProjectItemListItem } from 'src/models';\r\n\r\n\r\ntype TUseStateNumber = [number, Function]\r\ntype TUseStateTimer = [NodeJS.Timeout, Function]\r\n\r\nlet selected: number = 0;\r\n\r\nconst List3d: React.FC = (props: IProps): JSX.Element => {\r\n    const [timeoutScroll, settimeoutScroll]: TUseStateTimer = useState(undefined)\r\n    const scrollDelay: number = 150;\r\n    const listLength: number = props.store.portfolios.list.length;\r\n    const step: number = 360 / listLength;\r\n    const [rotateStep, setRotateStep]: TUseStateNumber = useState<number>(0)\r\n    let stepsToMove: number = props.store.portfolios.selected - selected;\r\n    selected = props.store.portfolios.selected;\r\n    \r\n\r\n    useEffect((): void => {\r\n        let newRotateStep: number = rotateStep;\r\n        if (stepsToMove !== 0) {\r\n            if (Math.abs(stepsToMove) > listLength / 2) {\r\n                stepsToMove = stepsToMove - Math.sign(stepsToMove)*listLength;\r\n            }\r\n            newRotateStep = rotateStep + stepsToMove\r\n        }\r\n        \r\n        selected = newRotateStep > 0 ? (newRotateStep % listLength) : ((listLength + newRotateStep % listLength) % listLength)\r\n        \r\n        props.setStore.setSelectedPortfolio(selected)\r\n        setRotateStep(newRotateStep)    \r\n    }, [rotateStep, selected])\r\n\r\n\r\n\r\n\r\n    const listScroll = (e: React.WheelEvent): void => {\r\n        if (!timeoutScroll) {\r\n            settimeoutScroll(setTimeout(() => {\r\n                clearTimeout(timeoutScroll);\r\n                settimeoutScroll(undefined);\r\n            }, scrollDelay))\r\n            e.deltaY > 0 ? setRotateStep(rotateStep => rotateStep + 1) : setRotateStep(rotateStep => rotateStep - 1)\r\n        }\r\n    }\r\n\r\n\r\n    let listItems: JSX.Element[] = props.store.portfolios.list.map((portfolio: ProjectItemListItem, index: number): JSX.Element => {\r\n            let portfolioStyle = {} as React.CSSProperties;\r\n            let deltaPos: number = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n            let opacity: number = 1 - deltaPos/(listLength / 6);\r\n            opacity = opacity < 0 ? 0 : opacity;\r\n            portfolioStyle.transform = `translate(-50%, -50%) rotateZ(${index * step}deg) translateX(${listLength * 15}px)`;\r\n            portfolioStyle.opacity = opacity;\r\n\r\n            return (\r\n                <div key={index} style={portfolioStyle} className={selected === index ? 'selected' : ''}>\r\n                    <a target=\"_blank\" href={portfolio.link}>{portfolio.name}</a>\r\n                </div>\r\n            )\r\n        })\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"list3d__container\" onWheel={listScroll}>\r\n            <div className=\"list3d\" style={{transform: `rotateZ(${(-360 / listLength) * rotateStep}deg)`}}>\r\n                {listItems}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps: IMapStateToProps = (store)  => ({store: store})\r\n\r\nconst mapDispatchToProps: IMapdispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List3d);\r\n\r\n/*\r\n    let i = 0\r\n\r\n    const logger = () => {\r\n        setInterval(() => {\r\n            i++\r\n            console.log('text', i );\r\n        }, 1000)\r\n    }\r\n\r\n    const testo = useCallback(() => {\r\n        logger()\r\n    }, [])\r\n\r\n    useEffect(() => testo(), [])\r\n*/\r\n/*\r\n    let i = 0  \r\n    const test = useCallback(() => {\r\n        i++\r\n        console.log(i);\r\n        \r\n    },[])\r\n\r\n    test()\r\n    */    ","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { useEffect } from \"react\";\r\nimport './list3d_v.scss'\r\n\r\nlet selected = 0;\r\nlet rotateStep = 0;\r\nlet scrollDelay = 50;\r\nlet timeoutScroll = undefined;\r\nlet listLength = 0\r\nlet stepsToMove = 0;\r\n\r\nconst List3d_v = (props) => {\r\n    stepsToMove = props.store.portfolios.selected - selected;\r\n    selected = props.store.portfolios.selected;\r\n    listLength = props.store.portfolios.list.length;\r\n\r\n    if (stepsToMove != 0) {\r\n        if (Math.abs(stepsToMove) > listLength / 2) {\r\n            stepsToMove = stepsToMove - Math.sign(stepsToMove)*listLength;\r\n        }\r\n        rotateStep = rotateStep + stepsToMove;  \r\n    }\r\n\r\n    const listScroll = (e) => {\r\n        e.preventDefault();\r\n        if (!timeoutScroll) {\r\n            timeoutScroll = setTimeout(() => {\r\n                clearTimeout(timeoutScroll);\r\n                timeoutScroll = undefined;\r\n            }, scrollDelay)\r\n            e.deltaY > 0 ? rotateStep++ : rotateStep--;\r\n        }\r\n        selected = rotateStep > 0 ? (rotateStep % listLength) : ((listLength + rotateStep % listLength) % listLength)\r\n        props.setStore.setSelectedPortfolio(selected)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.querySelector('.list3d_v__container'). addEventListener('wheel', (e) => listScroll(e))\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"list3d_v__container\">\r\n            <div className=\"list3d_v\" style={{transform: `rotateX(${(360 / listLength) * rotateStep}deg)`}}>\r\n                {[...props.store.portfolios.list].map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 4);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateX(${-index * step}deg) translateZ(${listLength * 6}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n\r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>\r\n                            <a target=\"_blank\" href={portfolio.link}>{portfolio.name}</a>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List3d_v);\r\n/*\r\n        <div className=\"list__container\">\r\n            <div className=\"list3d\" style={{transform: `rotateX(-1deg) rotateY(${(-360 / listLength) * rotateStep}deg)`}}>\r\n                {props.store.portfolios.list.map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 3);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateY(${index * step}deg) translateZ(${listLength * 20}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n\r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>{portfolio.name}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n                <div className=\"list__container\">\r\n            <div className=\"list3d\" style={{transform: `rotateZ(${(-360 / listLength) * rotateStep}deg)`}}>\r\n                {props.store.portfolios.list.map((portfolio, index) => {\r\n                    let portfolioStyle = {};\r\n                    let step = 360 / listLength;\r\n                    let deltaPos = Math.min(Math.abs(selected - index), listLength - Math.abs(index - selected));\r\n                    let opacity = 1 - deltaPos/(listLength / 3);\r\n                    opacity = opacity < 0 ? 0 : opacity;\r\n\r\n                    portfolioStyle.transform = `translate(-50%, -50%) rotateZ(${index * step}deg) translateX(${listLength * 4}px)`;\r\n                    portfolioStyle.opacity = opacity;\r\n\r\n                    return (\r\n                        <div key={index} style={portfolioStyle} className={selected == index ? 'selected' : ''}>{portfolio.name}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n*/","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport './list.scss'\r\nimport { IMapdispatchToProps, IMapStateToProps, IProps, ProjectItemListItem } from 'src/models';\r\n\r\ninterface ISelectPortfolio {\r\n    (index: number): void\r\n}\r\n\r\ninterface IList {\r\n    (props: IProps): JSX.Element\r\n}\r\n\r\n\r\nconst List: IList = (props) => {\r\n\r\n    const selectPortfolio: ISelectPortfolio = (index) => {\r\n        props.setStore.setSelectedPortfolio(index)\r\n    }\r\n\r\n    return(\r\n        <div className=\"list__container\">\r\n            <div className=\"list\">\r\n                <ul>\r\n                    {props.store.portfolios.list.map((portfolio: ProjectItemListItem, index: number): JSX.Element => {\r\n                        return (\r\n                            <li \r\n                                key={index} \r\n                                className={index == props.store.portfolios.selected ? 'selected' : ''}\r\n                                onClick={():void => selectPortfolio(index)}\r\n                            >\r\n                                {portfolio.name}\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps: IMapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps: IMapdispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport './info_portfolio.scss'\r\n\r\nconst InfoPortfolio = (props) => {\r\n    return(\r\n        <div className=\"info_portfolio__container\">\r\n            <p>{props.store.portfolios.list[props.store.portfolios.selected].descr}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoPortfolio);","import * as actions from '../../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport './info_portfolio-slide.scss'\r\n\r\nconst InfoPortfolioSlide = (props) => {\r\n    return(\r\n        <div className=\"info_portfolio-slide__container\">\r\n            <p>{props.store.modalDescr} </p> \r\n            {props.store.modalLink ? \r\n                (<a target='_blank' href={props.store.modalLink}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\r\n                        <polyline points=\"15 3 21 3 21 9\"></polyline>\r\n                        <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\r\n                    </svg>\r\n                </a>) \r\n                : \r\n                (null)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoPortfolioSlide);","import { Suspense, lazy } from \"react\";\r\nimport List3d from '../../components/blocks/list3d/List3d'\r\nimport List3d_v from '../../components/blocks/list3d_v/List3d_v'\r\nimport List from '../../components/blocks/list/List'\r\nimport InfoPortfolio from '../../components/blocks/info_portfolio/Info_portfolio'\r\nimport InfoPortfolioSlide from \"../../components/blocks/info_portfolio-slide/Info_portfolio-slide\";\r\nimport Preloader from \"../../components/preloader/Preloader\";\r\nimport './portfolio.scss'\r\nconst LazySplidePortfolio = lazy(() => import('../../components/blocks/splide_portfolios/Splide_portfolio'));\r\n\r\nconst Portfolio: React.FC  = (): JSX.Element  => {\r\n    return(\r\n        <div className=\"page-container\">\r\n            <div className=\"page_portfolio\">\r\n                <section className='portfolio'> \r\n                    <div className=\"header_portfolio\">\r\n                        <h2>Portfolios<em>Portfolios</em></h2>\r\n                        <div>\r\n                            <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"256pt\" height=\"256pt\" viewBox=\"0 0 256 256\" preserveAspectRatio=\"xMidYMid meet\">\r\n                                <g transform=\"translate(0,256) scale(0.1,-0.1)\" fill=\"#000000\" stroke=\"none\">\r\n                                    <path className='body' d=\"M195 2524 c-55 -19 -109 -66 -143 -122 -26 -46 -27 -51 -30 -234 -3 -178 -3 -187 17 -207 l21 -21 1090 0 c1077 0 1090 0 1110 20 25 25 25 55 0 80 -20 20 -33 20 -1070 20 l-1050 0 0 128 c0 143 11 175 72 212 32 20 53 20 1068 20 1015 0 1036 0 1068 -20 18 -11 41 -34 52 -52 20 -32 20 -53 20 -1068 0 -1015 0 -1036 -20 -1068 -11 -18 -34 -41 -52 -52 -32 -20 -53 -20 -1068 -20 -1015 0 -1036 0 -1068 20 -18 11 -41 34 -52 52 -19 32 -20 52 -20 791 0 744 0 757 -20 777 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20 -20 -20 -20 -33 -20 -778 0 -834 -2 -809 61 -885 17 -20 52 -49 77 -65 l47 -27 1075 0 1075 0 47 27 c25 16 60 45 77 65 64 78 62 23 59 1184 l-3 1054 -27 47 c-35 58 -88 103 -147 123 -65 22 -2104 21 -2166 -1z\"/>\r\n                                    <path className='dot dot_left' d=\"M280 2280 c-11 -11 -20 -29 -20 -40 0 -26 34 -60 60 -60 26 0 60 34 60 60 0 11 -9 29 -20 40 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20z\"/>\r\n                                    <path className='dot dot_middle' d=\"M480 2280 c-11 -11 -20 -29 -20 -40 0 -26 34 -60 60 -60 26 0 60 34 60 60 0 11 -9 29 -20 40 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20z\"/>\r\n                                    <path className='dot dot_right' d=\"M680 2280 c-11 -11 -20 -29 -20 -40 0 -11 9 -29 20 -40 11 -11 29 -20 40 -20 11 0 29 9 40 20 11 11 20 29 20 40 0 11 -9 29 -20 40 -11 11 -29 20 -40 20 -11 0 -29 -9 -40 -20z\"/>\r\n                                    <path className='link link_left' d=\"M590 1311 c-51 -16 -108 -51 -137 -85 -38 -42 -73 -133 -73 -186 0 -53 35 -144 73 -186 16 -20 53 -47 81 -62 47 -25 62 -27 198 -30 138 -4 147 -3 167 17 24 24 27 49 7 77 -13 17 -31 20 -159 24 -127 4 -149 8 -173 26 -53 39 -69 71 -69 134 0 63 16 95 69 134 27 20 39 21 386 21 347 0 359 -1 386 -21 43 -31 63 -64 73 -118 14 -74 59 -98 102 -55 18 18 21 29 16 69 -8 62 -46 139 -91 177 -19 17 -60 40 -91 52 -53 20 -74 21 -398 20 -188 0 -353 -4 -367 -8z\"/>\r\n                                    <path className='link link_right' d=\"M1700 1300 c-24 -24 -25 -49 -6 -76 12 -16 31 -20 139 -24 106 -4 130 -8 153 -26 53 -39 69 -71 69 -134 0 -63 -16 -95 -69 -134 -27 -20 -39 -21 -386 -21 -347 0 -359 1 -386 21 -43 31 -63 64 -73 118 -13 73 -59 98 -101 56 -26 -26 -25 -65 1 -135 26 -71 68 -119 133 -153 l51 -27 356 -3 c343 -3 358 -2 413 19 72 27 120 68 154 133 38 73 38 179 0 252 -58 111 -147 154 -318 154 -97 0 -112 -2 -130 -20z\"/>\r\n                                </g>\r\n                            </svg>\r\n                            <List3d />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"portfolio__content\">\r\n                        <List />\r\n                        <List3d_v />\r\n                        <div className=\"portfolio__splide\">\r\n                            <InfoPortfolio />\r\n                            <Suspense fallback={<Preloader />}>\r\n                                <LazySplidePortfolio />\r\n                            </Suspense>\r\n                            <InfoPortfolioSlide />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Portfolio;"],"names":["setTheme","theme","type","actionList","payload","setNavOpen","setNavClose","setContactName","email","setContactEmail","text","setContactSubject","setContactMessage","setModal","status","setModalImage","url","setModalDescr","setModalLink","link","setModalMsgVisible","visible","setModalMsgHeader","setModalMsgText","setModalMsgBtnText","setSelectedPortfolio","number","setImgLoaded","isLoaded","selected","connect","store","dispatch","setStore","bindActionCreators","actions","props","useState","undefined","timeoutScroll","settimeoutScroll","listLength","portfolios","list","length","step","rotateStep","setRotateStep","stepsToMove","useEffect","newRotateStep","Math","abs","sign","listItems","map","portfolio","index","portfolioStyle","opacity","min","transform","style","className","target","href","name","onWheel","e","setTimeout","clearTimeout","deltaY","document","querySelector","addEventListener","preventDefault","listScroll","onClick","selectPortfolio","descr","modalDescr","modalLink","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","LazySplidePortfolio","lazy","version","width","height","preserveAspectRatio","Suspense","fallback","Preloader"],"sourceRoot":""}