{"version":3,"file":"static/js/840.afc5a5bc.chunk.js","mappings":"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","sources":["assets/redux/actions.js","components/blocks/input/Input.jsx","components/blocks/textarea/Textarea.jsx","components/blocks/contact/Contact_block.jsx","components/modals/Modal.jsx","components/message/Message.jsx","pages/contact/Contact.jsx","assets/js/inputChecker.js"],"sourcesContent":["export const setTheme = (theme) => ({\r\n    type: 'SET_THEME',\r\n    payload: theme\r\n})\r\n\r\nexport const setNavOpen = () => ({\r\n    type: 'SET_NAV_OPEN',\r\n})\r\n\r\nexport const setNavClose = () => ({\r\n    type: 'SET_NAV_CLOSE',\r\n})\r\n\r\n\r\nexport const setContactName = (text) => ({\r\n    type: 'SET_CONTACT_NAME',\r\n    payload: text\r\n})\r\n\r\nexport const setContactEmail = (text) => ({\r\n    type: 'SET_CONTACT_EMAIL',\r\n    payload: text\r\n})\r\n\r\nexport const setContactSubject = (text) => ({\r\n    type: 'SET_CONTACT_SUBJECT',\r\n    payload: text\r\n})\r\n\r\nexport const setContactMessage = (text) => ({\r\n    type: 'SET_CONTACT_MESSAGE',\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setModal = (status) => ({\r\n    type: 'SET_MODAL',\r\n    payload: status\r\n})\r\n\r\n\r\nexport const setModalImage = (url) => ({\r\n    type: 'SET_MODAL_IMAGE',\r\n    payload: url\r\n})\r\n\r\nexport const setModalDescr = (text) => ({\r\n    type: 'SET_MODAL_DESCR',\r\n    payload: text\r\n})\r\n\r\nexport const setModalLink = (link) => ({\r\n    type: 'SET_MODAL_LINK',\r\n    payload: link\r\n})\r\n\r\nexport const setModalMsgVisible = (visible) => ({\r\n    type: 'SET_MODALMSG',\r\n    payload: visible\r\n})\r\n\r\nexport const setModalMsgHeader = (text) => ({\r\n    type: 'SET_MODALMSG_HEADER',\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgText = (text) => ({\r\n    type: 'SET_MODALMSG_TEXT',\r\n    payload: text\r\n})\r\n\r\nexport const setModalMsgBtnText = (text) => ({\r\n    type: 'SET_MODALMSG_BTNTEXT',\r\n    payload: text\r\n})\r\n\r\n\r\nexport const setCurrentGallery = (gallery) => ({\r\n    type: 'SET_CURRENT_GALLERY',\r\n    payload: gallery\r\n})\r\n\r\n\r\nexport const setSelectedPortfolio = (number) => ({\r\n    type: 'SET_SELECTED_PORTFOLIO',\r\n    payload: number\r\n})\r\n\r\n\r\nexport const setImgLoaded = (isLoaded) => ({\r\n    type: 'SET_IMG_LOADED',\r\n    payload: isLoaded\r\n})\r\n/*\r\nexport const setSlideIndex = (index) => ({\r\n    type: 'SET_SLIDE_INDEX',\r\n    payload: index\r\n})\r\n*/","import './input.scss'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <div className=\"input__container\">\r\n            <label htmlFor={props.id}>{props.text}</label>\r\n            <input \r\n                type={props.type} \r\n                id={props.id}\r\n                value={props.value}\r\n                onChange={(e) => props.changeValue(e)}\r\n                required={props.required}\r\n                name={props.name}\r\n                data-input={props.data}\r\n                data-min_length={props.minLength}\r\n                data-max_length={props.maxLength}\r\n                data-type={props.checkType}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import './textarea.scss'\r\n\r\n\r\nconst Textarea = (props) => {\r\n    return (\r\n        <div className=\"textarea__container\">\r\n            <label htmlFor={props.id}>{props.text}</label>\r\n            <textarea \r\n                type={props.type} \r\n                id={props.id}\r\n                value={props.value}\r\n                onChange={(e) => props.changeValue(e)}\r\n                required={props.required}\r\n                name={props.name}\r\n                data-input={props.data}\r\n                data-min_length={props.minLength}\r\n                data-max_length={props.maxLength}\r\n                data-type={props.checkType}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textarea;","import './contact_block.scss'\r\n\r\nconst ContactBlock = (props) => {\r\n    return (\r\n        <div className=\"contact-block\">\r\n            <div className=\"img-container\">\r\n                {props.image}\r\n            </div>\r\n            <div className=\"contact-info\">\r\n                <span>{props.header}</span>\r\n                {props.links?.map((link, index) => <a href={link.link} key={index} target={link.newWindow ? \"_blank\" : null}>{link.text}</a>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactBlock;\r\n","import * as actions from '../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport './modal.scss'\r\n\r\n\r\n\r\nexport function Modal(props) {\r\n    return (\r\n        <>\r\n            <div \r\n            className={`modal_common ${props.store.modalMsg.active ? 'active' : ''}`}\r\n            onClick={() => props.setStore.setModalMsgVisible(false)}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n\r\n\r\n\r\n","import './message.scss'\r\n\r\nfunction Message({header, text, buttonText, buttonClickAction}) {\r\n    return (\r\n        <div className='message__container' onClick={e => e.stopPropagation()}>\r\n            <h1 >{header}</h1>\r\n            <p>{text}</p>\r\n            <button className='link_button' onClick={buttonClickAction}>{buttonText}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message","import * as actions from '../../assets/redux/actions'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { checkInput } from '../../assets/js/inputChecker';\r\nimport axios from \"axios\";\r\nimport Input from '../../components/blocks/input/Input';\r\nimport Textarea from '../../components/blocks/textarea/Textarea';\r\nimport ContactBlock from \"../../components/blocks/contact/Contact_block\";\r\nimport Modal from '../../components/modals/Modal'\r\nimport Message from '../../components/message/Message'\r\nimport './contact.scss';\r\n\r\n\r\nconst Contact = (props) => {\r\n   \r\n    const checkInputs = (inputs) => {\r\n        let errorMessage  = [];\r\n        Array.from(inputs).forEach((input) => {\r\n            let error = checkInput(input.value.trim(), input.dataset.type, input.dataset.min_length,input.dataset.max_length);\r\n            if (error && input.required) {\r\n                input.parentNode.classList.add('incorrect')\r\n                errorMessage.push(`${input.name.charAt(0).toUpperCase() + input.name.slice(1)} ${error}`)\r\n            }\r\n        })\r\n        if (errorMessage.length > 0) {\r\n            props.setStore.setModalMsgHeader('Incorrect data');\r\n            props.setStore.setModalMsgText(`Some errors were found: \\n` + errorMessage.join(',\\n'));\r\n            props.setStore.setModalMsgBtnText('Close');\r\n            props.setStore.setModalMsgVisible(true);\r\n            return false\r\n        } else {\r\n            return true;   \r\n        } \r\n    }\r\n\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (checkInputs(document.querySelectorAll('[data-input=\"contact\"]'))) {\r\n            let currentDate = new Date();\r\n            let apiToken = process.env.REACT_APP_TG_TOK;\r\n            let chatId = process.env.REACT_APP_CHT_ID;\r\n            let text = `Date: ${currentDate.getDate() + '.' + (currentDate.getMonth()+1) + '.' + currentDate.getFullYear()}%0ATime: ${currentDate.getHours() + '.' + currentDate.getMinutes() + '.' + currentDate.getSeconds()}%0AName: ${props.store.contact.name}%0AEmail: ${props.store.contact.email}%0ATopic: ${props.store.contact.subject}%0A%0AMessage: ${props.store.contact.message}` ;\r\n            let urlString = `https://api.telegram.org/bot${apiToken}/sendMessage?chat_id=${chatId}&text=${text}`;\r\n    \r\n            axios.get(urlString)\r\n                .then(function (response) {\r\n                    props.setStore.setContactSubject('');\r\n                    props.setStore.setContactMessage('');\r\n                    //alert('Your message has been sent.');\r\n                    props.setStore.setModalMsgHeader('');\r\n                    props.setStore.setModalMsgText('Your message has been sent.');\r\n                    props.setStore.setModalMsgBtnText('Close');\r\n                    props.setStore.setModalMsgVisible(true)\r\n                })\r\n                .catch(function (error) {\r\n                    props.setStore.setModalMsgHeader('Error');\r\n                    props.setStore.setModalMsgText('Service unavailable. Please, try again later. \\nError: '+ error.message);\r\n                    props.setStore.setModalMsgBtnText('Close');\r\n                    props.setStore.setModalMsgVisible(true)\r\n                    //alert('Service unavailable. Please, try again later. Error: ' + error);\r\n                })\r\n                .then(function () {});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal>\r\n                <Message \r\n                    header={props.store.modalMsg.header}\r\n                    text={props.store.modalMsg.text}\r\n                    buttonText={props.store.modalMsg.btnText}\r\n                    buttonClickAction={() => props.setStore.setModalMsgVisible(false)}\r\n                />\r\n            </Modal>\r\n            <div className=\"page-container\">\r\n                <div className=\"page_contact\">\r\n                    <section className='contact-me'> \r\n                        <h2>Contact me<em>Contact me</em></h2>\r\n                        <h4>Get In Touch</h4>\r\n                        <div className=\"contact__container\">\r\n                            <form className=\"mail-me\">\r\n                                <Input \r\n                                    id='contact_name'\r\n                                    text='Your name *'\r\n                                    changeValue={ (e) => {\r\n                                        props.setStore.setContactName(e.target.value) \r\n                                        e.target.parentNode.classList.remove('incorrect')\r\n                                    }}\r\n                                    value={props.store.contact.name}\r\n                                    required={true}\r\n                                    type='text'\r\n                                    checkType='all'\r\n                                    name='name'\r\n                                    data='contact'\r\n                                    minLength={2}\r\n                                    maxLength={15}\r\n                                    />\r\n                                <Input \r\n                                    id='contact_email'\r\n                                    text='Your email *'\r\n                                    changeValue={ (e) => {\r\n                                        props.setStore.setContactEmail(e.target.value) \r\n                                        e.target.parentNode.classList.remove('incorrect')\r\n                                    }}\r\n                                    value={props.store.contact.email}\r\n                                    required={true}\r\n                                    type='email'\r\n                                    checkType='email'\r\n                                    name='email'\r\n                                    data='contact'\r\n                                    minLength={6}\r\n                                    maxLength={50}\r\n                                    />\r\n                                <Input \r\n                                    id='contact_subject'\r\n                                    text='Your subject'\r\n                                    changeValue={ (e) => {\r\n                                        props.setStore.setContactSubject(e.target.value) \r\n                                        e.target.parentNode.classList.remove('incorrect')\r\n                                    }}\r\n                                    value={props.store.contact.subject}\r\n                                    required={false}\r\n                                    type='text'\r\n                                    checkType='all'\r\n                                    name='subject'\r\n                                    data='contact'\r\n                                    minLength={6}\r\n                                    maxLength={50}\r\n                                    />\r\n                                <Textarea\r\n                                    id='contact_message'\r\n                                    text='Your message *'\r\n                                    changeValue={ (e) => {\r\n                                        props.setStore.setContactMessage(e.target.value) \r\n                                        e.target.parentNode.classList.remove('incorrect')\r\n                                    } }\r\n                                    value={props.store.contact.message}\r\n                                    required={true}\r\n                                    type='text'\r\n                                    checkType='all'\r\n                                    name='message'\r\n                                    data='contact'\r\n                                    minLength={10}\r\n                                    maxLength={300}\r\n                                    />\r\n                                <button type=\"submit\" className=\"link_button\" onClick={(e) => sendMessage(e)}>Send message</button>      \r\n                            </form>\r\n                            <div className=\"my-info\">\r\n                                <ContactBlock \r\n                                    image={\r\n                                        <svg className=\"img-phone\" xmlns=\"http://www.w3.org/2000/svg\" clipRule=\"evenodd\" viewBox=\"0 0 508 512.06\"><title>Phone</title>\r\n                                            <path d=\"M123.43 249.39c15.07,27.16 32.42,53.26 54.98,77.05 22.61,23.95 50.71,45.72 87.14,64.3 2.7,1.32 5.27,1.32 7.55,0.42 3.46,-1.33 6.99,-4.18 10.47,-7.67 2.7,-2.69 6.04,-6.99 9.56,-11.7 13.99,-18.44 31.34,-41.29 55.81,-29.86 0.54,0.25 0.95,0.53 1.49,0.78l81.66 46.96c0.22,0.12 0.53,0.42 0.77,0.53 10.78,7.41 15.2,18.84 15.32,31.76 0,13.18 -4.85,27.98 -11.96,40.5 -9.4,16.5 -23.27,27.43 -39.25,34.69 -15.2,7 -32.13,10.75 -48.4,13.15 -25.55,3.77 -49.47,1.37 -73.94,-6.16 -23.94,-7.42 -48.03,-19.63 -74.37,-35.89l-1.95 -1.25c-12.07,-7.52 -25.12,-15.61 -37.91,-25.13 -46.91,-35.4 -94.65,-86.48 -125.74,-142.71 -26.08,-47.2 -40.32,-98.15 -32.53,-146.73 4.3,-26.63 15.72,-50.84 35.63,-66.82 17.35,-13.98 40.74,-21.64 71.01,-18.96 3.48,0.23 6.58,2.27 8.19,5.24l52.33 88.5c7.67,9.93 8.61,19.75 4.44,29.58 -3.49,8.09 -10.47,15.5 -20.04,22.46 -2.82,2.4 -6.18,4.84 -9.69,7.4 -11.71,8.5 -25,18.3 -20.45,29.85l-0.12 -0.29zm97.51 -42.25c-8.08,-2.08 -12.94,-10.35 -10.85,-18.43 2.09,-8.08 10.35,-12.94 18.43,-10.85 24.51,6.39 47.56,19.66 66.21,37.07 18.76,17.52 33.31,39.41 40.66,62.88 2.48,7.99 -1.98,16.49 -9.96,18.97 -7.98,2.49 -16.49,-1.97 -18.97,-9.95 -5.75,-18.37 -17.33,-35.69 -32.36,-49.73 -15.15,-14.15 -33.68,-24.88 -53.16,-29.96zm2.01 -92.74c-8.25,-1.4 -13.79,-9.24 -12.39,-17.49 1.39,-8.24 9.24,-13.79 17.48,-12.39 46.21,8 90.08,31.46 125.25,64.38 35.19,32.92 61.82,75.41 73.53,121.46 2.06,8.12 -2.85,16.38 -10.97,18.44 -8.12,2.06 -16.38,-2.85 -18.44,-10.97 -10.3,-40.48 -33.75,-77.89 -64.75,-106.89 -30.93,-28.95 -69.38,-49.55 -109.71,-56.54zm9.74 -84.19c-8.31,-0.95 -14.28,-8.47 -13.33,-16.78 0.95,-8.31 8.46,-14.29 16.77,-13.34 64.65,7.57 125.4,37.22 173.49,80.81 48.21,43.69 83.83,101.51 98.02,165.22 1.8,8.14 -3.35,16.22 -11.5,18.02 -8.14,1.8 -16.22,-3.35 -18.02,-11.5 -12.8,-57.45 -45.05,-109.73 -88.77,-149.34 -43.53,-39.45 -98.4,-66.28 -156.66,-73.09z\"/>\r\n                                        </svg>\r\n                                    }\r\n                                    header='Phone'\r\n                                    links={props.store.contacts.phone}\r\n                                />\r\n                                <ContactBlock \r\n                                    image={\r\n                                        <svg className=\"img-email\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 122.88 88.86\"><title>Email</title>\r\n                                            <path d=\"M7.05,0H115.83a7.07,7.07,0,0,1,7,7.05V81.81a7,7,0,0,1-1.22,4,2.78,2.78,0,0,1-.66,1,2.62,2.62,0,0,1-.66.46,7,7,0,0,1-4.51,1.65H7.05a7.07,7.07,0,0,1-7-7V7.05A7.07,7.07,0,0,1,7.05,0Zm-.3,78.84L43.53,40.62,6.75,9.54v69.3ZM49.07,45.39,9.77,83.45h103L75.22,45.39l-11,9.21h0a2.7,2.7,0,0,1-3.45,0L49.07,45.39Zm31.6-4.84,35.46,38.6V9.2L80.67,40.55ZM10.21,5.41,62.39,47.7,112.27,5.41Z\"/>\r\n                                        </svg>\r\n                                    }\r\n                                    header='Email'\r\n                                    links={props.store.contacts.email}\r\n                                />\r\n                                <ContactBlock \r\n                                    image={\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 92.26 122.88\"><title>Address</title>\r\n                                            <path d=\"M47.49,116.85c6.31-4.01,11.98-8.87,16.92-14.29c10.73-11.75,17.97-26.11,20.87-40.2c2.88-13.91,1.52-27.54-4.85-38.06 c-1.81-3.02-4.08-5.78-6.78-8.26c-7.74-7.05-16.6-10.41-25.52-10.5c-9.37-0.07-18.87,3.45-27.27,10.14 c-3.58,2.86-6.53,6.15-8.82,9.78c-5.9,9.28-7.69,20.8-5.74,32.85c1.97,12.23,7.78,25.02,17.04,36.61 c6.44,8.08,14.54,15.58,24.18,21.91L47.49,116.85L47.49,116.85z M46.13,21.16c7.05,0,13.45,2.86,18.06,7.49 c4.63,4.63,7.49,11,7.49,18.06c0,7.05-2.86,13.45-7.49,18.06c-4.63,4.63-11,7.49-18.06,7.49c-7.05,0-13.45-2.86-18.06-7.49 c-4.63-4.63-7.49-11-7.49-18.06c0-7.05,2.86-13.45,7.49-18.06C32.7,24.02,39.07,21.16,46.13,21.16L46.13,21.16z M60.51,32.33 c-3.67-3.67-8.78-5.97-14.38-5.97c-5.63,0-10.71,2.27-14.38,5.97c-3.67,3.67-5.97,8.78-5.97,14.38c0,5.63,2.27,10.71,5.97,14.38 c3.67,3.67,8.78,5.97,14.38,5.97c5.63,0,10.71-2.27,14.38-5.97c3.67-3.67,5.97-8.78,5.97-14.38C66.47,41.08,64.21,36,60.51,32.33 L60.51,32.33z M68.52,106.27c-5.6,6.12-12.09,11.61-19.42,16.06c-0.88,0.66-2.13,0.75-3.13,0.11 c-10.8-6.87-19.85-15.13-26.99-24.09C9.15,86.02,2.94,72.34,0.83,59.16c-2.15-13.36-0.14-26.2,6.51-36.68 c2.63-4.13,5.97-7.89,10.07-11.14C26.78,3.88,37.51-0.07,48.17,0c10.28,0.09,20.42,3.9,29.22,11.93c3.09,2.81,5.67,5.99,7.78,9.48 c7.15,11.77,8.69,26.81,5.56,42.01c-3.11,15.04-10.8,30.33-22.18,42.8L68.52,106.27L68.52,106.27z\"/>\r\n                                        </svg>\r\n                                    }\r\n                                    header='Address'\r\n                                    links={props.store.contacts.address}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (store) => ({store: store})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStore: bindActionCreators(actions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","export const checkInput = (text, type, minLength, maxLength) => {\r\n    const emailFormat = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const textFormat = /[a-zA-Z]$/;\r\n    const textNumbersFormat = /[a-zA-Z0-9]$/;\r\n    const numbersFormat = /[0-9]$/;\r\n    if (text.length < minLength) { \r\n        return `should be at least ${minLength} symbols`\r\n    }\r\n    if (text.length > maxLength) { \r\n        return `should be no more ${maxLength} symbols`\r\n    }\r\n    if (type ==='email' && !text.match(emailFormat)) { \r\n        return 'email is incorrect'\r\n    }\r\n    if (type ==='text' && !text.match(textFormat)) { \r\n        return 'only letters are allowed'\r\n    }\r\n    if (type ==='textNumbers' && !text.match(textNumbersFormat)) { \r\n        return 'only letters and numbers are allowed'\r\n    }\r\n    if (type ==='numbers' && !text.match(numbersFormat)) { \r\n        return 'only numbers are allowed'\r\n    }\r\n    if (type === 'all') {\r\n        return false\r\n    }\r\n    return false\r\n}\r\n\r\n"],"names":["setTheme","theme","type","payload","setNavOpen","setNavClose","setContactName","text","setContactEmail","setContactSubject","setContactMessage","setModal","status","setModalImage","url","setModalDescr","setModalLink","link","setModalMsgVisible","visible","setModalMsgHeader","setModalMsgText","setModalMsgBtnText","setCurrentGallery","gallery","setSelectedPortfolio","number","setImgLoaded","isLoaded","props","className","htmlFor","id","value","onChange","e","changeValue","required","name","data","minLength","maxLength","checkType","image","header","links","map","index","href","target","newWindow","connect","store","dispatch","setStore","bindActionCreators","actions","modalMsg","active","onClick","children","buttonText","buttonClickAction","stopPropagation","sendMessage","preventDefault","inputs","errorMessage","Array","from","forEach","input","error","trim","dataset","min_length","max_length","length","match","parentNode","classList","add","push","charAt","toUpperCase","slice","join","checkInputs","document","querySelectorAll","currentDate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","contact","email","subject","message","urlString","process","axios","then","response","catch","btnText","remove","xmlns","clipRule","viewBox","d","contacts","phone","address"],"sourceRoot":""}